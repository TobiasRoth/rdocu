[["index.html", "Nützlicher R Code 1 Einleitung", " Nützlicher R Code Tobias Roth 2021-12-29 1 Einleitung In diesem Repository beschreibe ich R-Code, den ich nützlich finde. Ich habe die Dokumentation für mich selbst erstellt, da ich Code, den ich nicht so oft brauche, schnell vergesse. "],["intro.html", "2 Allgemein 2.1 Beispieldaten", " 2 Allgemein 2.1 Beispieldaten Ich verwende die folgenden Beispielsdaten Biogeographische Regionen der Schweiz Digitales Höhenmodell der Schweiz mit einer 100m x 100m Auflösung. "],["datenaufbereitung.html", "3 Datenaufbereitung", " 3 Datenaufbereitung "],["grafiken.html", "4 Grafiken 4.1 Nützliche Resourcen 4.2 Karten mit ggplot", " 4 Grafiken 4.1 Nützliche Resourcen 4.1.1 Links ggplot3: Bookdown Version. Work in Progress Version des ggplot2 Buches. 4.2 Karten mit ggplot Mit ggplot können auch räumliche Daten als Karten dargestellt werden. Im folgenden ein Beispiel mit Rasterdaten. Diese müssen erst in ein Dataframe umgewandelt werden und können dann wieder als Raster geplottet werden. d &lt;- raster(volcano) %&gt;% rasterToPoints() %&gt;% as_tibble() ggplot() + geom_raster(data = d, aes(x = x, y = y, fill = layer)) + labs(x = &quot;&quot;, y = &quot;&quot;) + scale_fill_gradientn( colours = c(&quot;White&quot;, &quot;#EDF8B1&quot;, &quot;#7FCDBB&quot;, &quot;#2C7FB8&quot;), values = c(0, 0.1, 0.6, 1), name = &quot;Legendentitel&quot;, guide = guide_legend(keyheight = unit(3, units = &quot;mm&quot;)) ) "],["rgis.html", "5 GIS-Funktionen 5.1 Nützliche Resourcen 5.2 Allgemeine Funktionen", " 5 GIS-Funktionen 5.1 Nützliche Resourcen 5.1.1 Links 5.1.2 Packages Ich verwende vor allem das raster Package um Rasterdaten zu bearbeiten und das sf Package für alle anderen räumlichen Datentypen (Punktdaten, Liniendaten, Polygone). 5.2 Allgemeine Funktionen Eine Tabelle (data.frame oder tibble) mit x und y Koordinaten in ein Objekt der Klasse sf umwandeln. bundeshaus &lt;- tibble( c(&quot;Bern Bundesplatz&quot;), x = c(2600472.500), y = c(1199555.500) ) %&gt;% st_as_sf(coords = c(&quot;x&quot;, &quot;y&quot;), crs = 2056) Daten von einem .csv File einlesen und in ein Rasterobjekt verwandeln. dhm &lt;- read_csv(&quot;daten/digitales_hoehenmodel.csv.zip&quot;) %&gt;% rasterFromXYZ(crs = 21781) Die folgenden Koordinatensysteme brauche ich relativ häufig. ch1903 &lt;- CRS(&quot;+init=epsg:21781&quot;) # Old Swiss grid 1903 chLV95 &lt;- CRS(&quot;+init=epsg:2056&quot;) # New Swiss grid 1903+ wgs84 &lt;- CRS(&quot;+init=epsg:4326&quot;) # WGS 84 Mit den folgenden Funktionen können Daten zwischen Koordinatensystemn umgewandelt werden. # Für sf objects bundeshaus %&gt;% st_transform(crs = 21781) # For raster objects dhm %&gt;% projectRaster(crs = 2056) "],["misc.html", "6 Verschiedenes 6.1 Units", " 6 Verschiedenes 6.1 Units Das Packet units ist nützlich um mit verschiedenen Einheiten umzugehen und diese einfach ineinander umwandeln zu können. Das Packet wird automatisch gebraucht, wenn Längen und Flächen von räumlichen Daten mit dem dem Packet sfberechnet werden. Im folgenden ein Beispiel mit räumlichen Flächenberechnungen Example: How units are used in package sf: library(units) # Load biogeographic region shapefile as example dat &lt;- st_read(&quot;daten//BGR/biogreg.shp&quot;, quiet = TRUE) # Calculate area (they are of class units, the unit is square meteres) (area &lt;- st_area(dat)) ## Units: [m^2] ## [1] 108439676 1330857641 4250867716 4198648313 478255132 4801875024 ## [7] 268386654 1933997234 784897484 237302331 1617081664 1628143377 ## [13] 8804154605 5828156490 4836468172 187214296 # Change area to km^2 area %&gt;% set_units(&quot;km^2&quot;) ## Units: [km^2] ## [1] 108.4397 1330.8576 4250.8677 4198.6483 478.2551 4801.8750 268.3867 ## [8] 1933.9972 784.8975 237.3023 1617.0817 1628.1434 8804.1546 5828.1565 ## [15] 4836.4682 187.2143 # Change class to numeric area %&gt;% as.numeric() ## [1] 108439676 1330857641 4250867716 4198648313 478255132 4801875024 ## [7] 268386654 1933997234 784897484 237302331 1617081664 1628143377 ## [13] 8804154605 5828156490 4836468172 187214296 # Note: if you want to make a calculations with units, other elements need to be of # class units as well area &gt; as_units(1000, &quot;km^2&quot;) ## [1] FALSE TRUE TRUE TRUE FALSE TRUE FALSE TRUE FALSE FALSE TRUE TRUE ## [13] TRUE TRUE TRUE FALSE area - as_units(10, &quot;km^2&quot;) ## Units: [m^2] ## [1] 98439676 1320857641 4240867716 4188648313 468255132 4791875024 ## [7] 258386654 1923997234 774897484 227302331 1607081664 1618143377 ## [13] 8794154605 5818156490 4826468172 177214296 "]]
